server:
  port: ${SERVER_PORT:5211}
  tomcat:
    uri-encoding: UTF-8

spring:
  application:
    name: security-websocket
  http:
    # 过滤字符编码
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  redis:
    database: ${REDIS_DATABASE:1}
    host: ${REDIS_HOST:192.168.6.128}
    port: ${REDIS_PORT:6379}
    lettuce:
      pool:
        #最大连接数
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-wait: 1000ms
        #最大空闲
        max-idle: 8
        #最小空闲
        min-idle: 0

eureka:
  instance:
    hostname: security-websocket-${random.value}
    instance-id: ${eureka.instance.hostname}:${server.port}:@project.version@
    ip-address: ${INSTANCE_IP:192.168.6.128}
    #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
    lease-expiration-duration-in-seconds: 2
    #服务刷新时间配置，每隔这个时间会主动心跳一次
    #默认30S
    lease-renewal-interval-in-seconds: 1
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_HOSTNAME:192.168.6.128}:${EUREKA_PORT:8761}/eureka/
    healthcheck:
      enable: true
    ##eureka client刷新本地缓存时间
    # 默认30s
    registryFetchIntervalSeconds: 5

ribbon:
  #eureka客户端ribbon刷新时间
  ServerListRefreshInterval: 5000
  # 默认的调用超时时间
  ConnectTimeout: 500
  ReadTimeout: 5000



logging:
  config: classpath:config/logback-prod.xml
